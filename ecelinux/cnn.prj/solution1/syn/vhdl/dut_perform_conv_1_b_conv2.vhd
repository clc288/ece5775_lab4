-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dut_perform_conv_1_b_conv2_rom is 
    generic(
             dwidth     : integer := 9; 
             awidth     : integer := 6; 
             mem_size    : integer := 64
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dut_perform_conv_1_b_conv2_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "110110101", 1 => "110110001", 2 => "110111011", 3 => "110010100", 
    4 => "110011111", 5 => "111000100", 6 => "101111100", 7 => "111001011", 
    8 => "110101000", 9 => "110011001", 10 => "111100100", 11 => "111001111", 
    12 => "110011101", 13 => "110100100", 14 => "111000000", 15 => "110000100", 
    16 => "110101000", 17 => "110100100", 18 => "110110011", 19 => "110100011", 
    20 => "111010101", 21 => "110111010", 22 => "111000011", 23 => "110010011", 
    24 => "110110010", 25 => "110111001", 26 => "110111010", 27 => "110010011", 
    28 => "110101101", 29 => "110100110", 30 => "111000101", 31 => "110011111", 
    32 => "110101110", 33 => "110100010", 34 => "111001110", 35 => "111000010", 
    36 => "110111011", 37 => "110011111", 38 => "110101000", 39 => "110111111", 
    40 => "111000000", 41 => "110011110", 42 => "110110110", 43 => "111011100", 
    44 => "110101001", 45 => "110110010", 46 => "110101101", 47 => "110101100", 
    48 => "101110011", 49 => "111000100", 50 => "110101110", 51 => "110010100", 
    52 => "110111000", 53 => "111010101", 54 => "111100011", 55 => "111000101", 
    56 => "110111011", 57 => "110111100", 58 => "110111011", 59 => "110011001", 
    60 => "111000111", 61 => "110101000", 62 => "110000101", 63 => "110000001" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity dut_perform_conv_1_b_conv2 is
    generic (
        DataWidth : INTEGER := 9;
        AddressRange : INTEGER := 64;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dut_perform_conv_1_b_conv2 is
    component dut_perform_conv_1_b_conv2_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dut_perform_conv_1_b_conv2_rom_U :  component dut_perform_conv_1_b_conv2_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


