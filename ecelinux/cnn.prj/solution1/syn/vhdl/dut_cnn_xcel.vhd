-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_cnn_xcel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V : IN STD_LOGIC_VECTOR (48 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dut_cnn_xcel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_56 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv10_240 : STD_LOGIC_VECTOR (9 downto 0) := "1001000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv20_556 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010101010110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_F4 : STD_LOGIC_VECTOR (7 downto 0) := "11110100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_31 : BOOLEAN;
    signal i_fu_302_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_56 : BOOLEAN;
    signal next_mul_fu_334_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond5_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_urem_fu_369_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_3_fu_383_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_3_reg_545 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_73 : BOOLEAN;
    signal idx_urem8_fu_401_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal idx_urem8_reg_550 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul5_fu_413_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal next_mul5_reg_555 : STD_LOGIC_VECTOR (19 downto 0);
    signal sel_tmp_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_575 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_V_load_phi_fu_455_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_V_load_phi_reg_585 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_99 : BOOLEAN;
    signal tmp_17_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_590 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_110 : BOOLEAN;
    signal p_Result_s_fu_492_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal mem_conv1_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mem_conv1_0_V_ce0 : STD_LOGIC;
    signal mem_conv1_0_V_we0 : STD_LOGIC;
    signal mem_conv1_0_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_0_V_ce1 : STD_LOGIC;
    signal mem_conv1_0_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mem_conv1_1_V_ce0 : STD_LOGIC;
    signal mem_conv1_1_V_we0 : STD_LOGIC;
    signal mem_conv1_1_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_1_V_ce1 : STD_LOGIC;
    signal mem_conv1_1_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_2_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mem_conv1_2_V_ce0 : STD_LOGIC;
    signal mem_conv1_2_V_we0 : STD_LOGIC;
    signal mem_conv1_2_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv1_2_V_ce1 : STD_LOGIC;
    signal mem_conv1_2_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_0_V_ce0 : STD_LOGIC;
    signal mem_conv2_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_0_V_ce1 : STD_LOGIC;
    signal mem_conv2_0_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_1_V_ce0 : STD_LOGIC;
    signal mem_conv2_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_1_V_ce1 : STD_LOGIC;
    signal mem_conv2_1_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_2_V_ce0 : STD_LOGIC;
    signal mem_conv2_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_2_V_ce1 : STD_LOGIC;
    signal mem_conv2_2_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_3_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_3_V_ce0 : STD_LOGIC;
    signal mem_conv2_3_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_3_V_ce1 : STD_LOGIC;
    signal mem_conv2_3_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_4_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_4_V_ce0 : STD_LOGIC;
    signal mem_conv2_4_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem_conv2_4_V_ce1 : STD_LOGIC;
    signal mem_conv2_4_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_1_fu_257_ap_start : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_ap_done : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_ap_idle : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_ap_ready : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V1_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V1_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V2_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V2_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V3_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V3_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V4_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_input_V4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_1_fu_257_input_V4_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_1_fu_257_output_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_1_fu_257_output_V5_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_1_fu_257_output_V5_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V5_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V5_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_1_fu_257_output_V6_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_1_fu_257_output_V6_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V6_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_1_fu_257_output_V6_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_fu_273_ap_start : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_ap_done : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_ap_idle : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_ap_ready : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_0_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_0_V_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_1_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_1_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_1_V_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_2_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_2_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_input_2_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dut_perform_conv_fu_273_input_2_V_ce1 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_fu_273_output_0_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_0_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_0_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_fu_273_output_1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_fu_273_output_1_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_1_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_1_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_fu_273_output_2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_fu_273_output_2_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_2_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_2_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_fu_273_output_3_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_fu_273_output_3_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_3_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_3_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dut_perform_conv_fu_273_output_4_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_perform_conv_fu_273_output_4_V_ce0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_4_V_we0 : STD_LOGIC;
    signal grp_dut_perform_conv_fu_273_output_4_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal bvh_d_index_reg_190 : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul_reg_201 : STD_LOGIC_VECTOR (12 downto 0);
    signal phi_urem_reg_212 : STD_LOGIC_VECTOR (5 downto 0);
    signal i2_reg_223 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_339 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_349 : BOOLEAN;
    signal phi_mul4_reg_235 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_urem6_reg_246 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_grp_dut_perform_conv_1_fu_257_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_363 : BOOLEAN;
    signal ap_reg_grp_dut_perform_conv_fu_273_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_397 : BOOLEAN;
    signal newIndex_fu_350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_fu_429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_330_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_cast_fu_323_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_assign_cast6_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_315_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_71_fu_340_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal next_urem_fu_357_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_75_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_urem7_fu_389_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_72_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_419_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_409_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp1_fu_448_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_V_1_fu_472_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exp_V_fu_476_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal exp_V_2_fu_486_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);

    component dut_perform_conv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V_ce0 : OUT STD_LOGIC;
        input_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V_ce1 : OUT STD_LOGIC;
        input_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V1_ce0 : OUT STD_LOGIC;
        input_V1_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V1_ce1 : OUT STD_LOGIC;
        input_V1_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V2_ce0 : OUT STD_LOGIC;
        input_V2_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V2_ce1 : OUT STD_LOGIC;
        input_V2_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V3_ce0 : OUT STD_LOGIC;
        input_V3_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V3_ce1 : OUT STD_LOGIC;
        input_V3_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V4_ce0 : OUT STD_LOGIC;
        input_V4_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_V4_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_V4_ce1 : OUT STD_LOGIC;
        input_V4_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_V_ce0 : OUT STD_LOGIC;
        output_V_we0 : OUT STD_LOGIC;
        output_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_V5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_V5_ce0 : OUT STD_LOGIC;
        output_V5_we0 : OUT STD_LOGIC;
        output_V5_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_V5_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_V6_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_V6_ce0 : OUT STD_LOGIC;
        output_V6_we0 : OUT STD_LOGIC;
        output_V6_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_V6_q0 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dut_perform_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_0_V_ce0 : OUT STD_LOGIC;
        input_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_0_V_ce1 : OUT STD_LOGIC;
        input_0_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_1_V_ce0 : OUT STD_LOGIC;
        input_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_1_V_ce1 : OUT STD_LOGIC;
        input_1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_2_V_ce0 : OUT STD_LOGIC;
        input_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        input_2_V_ce1 : OUT STD_LOGIC;
        input_2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_0_V_ce0 : OUT STD_LOGIC;
        output_0_V_we0 : OUT STD_LOGIC;
        output_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_1_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_1_V_ce0 : OUT STD_LOGIC;
        output_1_V_we0 : OUT STD_LOGIC;
        output_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_2_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_2_V_ce0 : OUT STD_LOGIC;
        output_2_V_we0 : OUT STD_LOGIC;
        output_2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_3_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_3_V_ce0 : OUT STD_LOGIC;
        output_3_V_we0 : OUT STD_LOGIC;
        output_3_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_3_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        output_4_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_4_V_ce0 : OUT STD_LOGIC;
        output_4_V_we0 : OUT STD_LOGIC;
        output_4_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_4_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dut_sitofp_32s_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_cnn_xcel_mem_conv1_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dut_cnn_xcel_mem_conv1_2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dut_cnn_xcel_mem_conv2_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    mem_conv1_0_V_U : component dut_cnn_xcel_mem_conv1_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 267,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_0_V_address0,
        ce0 => mem_conv1_0_V_ce0,
        we0 => mem_conv1_0_V_we0,
        d0 => mem_conv1_0_V_d0,
        q0 => mem_conv1_0_V_q0,
        address1 => grp_dut_perform_conv_fu_273_input_0_V_address1,
        ce1 => mem_conv1_0_V_ce1,
        q1 => mem_conv1_0_V_q1);

    mem_conv1_1_V_U : component dut_cnn_xcel_mem_conv1_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 267,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_1_V_address0,
        ce0 => mem_conv1_1_V_ce0,
        we0 => mem_conv1_1_V_we0,
        d0 => mem_conv1_1_V_d0,
        q0 => mem_conv1_1_V_q0,
        address1 => grp_dut_perform_conv_fu_273_input_1_V_address1,
        ce1 => mem_conv1_1_V_ce1,
        q1 => mem_conv1_1_V_q1);

    mem_conv1_2_V_U : component dut_cnn_xcel_mem_conv1_2_V
    generic map (
        DataWidth => 14,
        AddressRange => 266,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_2_V_address0,
        ce0 => mem_conv1_2_V_ce0,
        we0 => mem_conv1_2_V_we0,
        d0 => mem_conv1_2_V_d0,
        q0 => mem_conv1_2_V_q0,
        address1 => grp_dut_perform_conv_fu_273_input_2_V_address1,
        ce1 => mem_conv1_2_V_ce1,
        q1 => mem_conv1_2_V_q1);

    mem_conv2_0_V_U : component dut_cnn_xcel_mem_conv2_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_0_V_address0,
        ce0 => mem_conv2_0_V_ce0,
        we0 => grp_dut_perform_conv_fu_273_output_0_V_we0,
        d0 => grp_dut_perform_conv_fu_273_output_0_V_d0,
        q0 => mem_conv2_0_V_q0,
        address1 => grp_dut_perform_conv_1_fu_257_input_V_address1,
        ce1 => mem_conv2_0_V_ce1,
        q1 => mem_conv2_0_V_q1);

    mem_conv2_1_V_U : component dut_cnn_xcel_mem_conv2_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_1_V_address0,
        ce0 => mem_conv2_1_V_ce0,
        we0 => grp_dut_perform_conv_fu_273_output_1_V_we0,
        d0 => grp_dut_perform_conv_fu_273_output_1_V_d0,
        q0 => mem_conv2_1_V_q0,
        address1 => grp_dut_perform_conv_1_fu_257_input_V1_address1,
        ce1 => mem_conv2_1_V_ce1,
        q1 => mem_conv2_1_V_q1);

    mem_conv2_2_V_U : component dut_cnn_xcel_mem_conv2_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_2_V_address0,
        ce0 => mem_conv2_2_V_ce0,
        we0 => grp_dut_perform_conv_fu_273_output_2_V_we0,
        d0 => grp_dut_perform_conv_fu_273_output_2_V_d0,
        q0 => mem_conv2_2_V_q0,
        address1 => grp_dut_perform_conv_1_fu_257_input_V2_address1,
        ce1 => mem_conv2_2_V_ce1,
        q1 => mem_conv2_2_V_q1);

    mem_conv2_3_V_U : component dut_cnn_xcel_mem_conv2_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_3_V_address0,
        ce0 => mem_conv2_3_V_ce0,
        we0 => grp_dut_perform_conv_fu_273_output_3_V_we0,
        d0 => grp_dut_perform_conv_fu_273_output_3_V_d0,
        q0 => mem_conv2_3_V_q0,
        address1 => grp_dut_perform_conv_1_fu_257_input_V3_address1,
        ce1 => mem_conv2_3_V_ce1,
        q1 => mem_conv2_3_V_q1);

    mem_conv2_4_V_U : component dut_cnn_xcel_mem_conv2_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_4_V_address0,
        ce0 => mem_conv2_4_V_ce0,
        we0 => grp_dut_perform_conv_fu_273_output_4_V_we0,
        d0 => grp_dut_perform_conv_fu_273_output_4_V_d0,
        q0 => mem_conv2_4_V_q0,
        address1 => grp_dut_perform_conv_1_fu_257_input_V4_address1,
        ce1 => mem_conv2_4_V_ce1,
        q1 => mem_conv2_4_V_q1);

    grp_dut_perform_conv_1_fu_257 : component dut_perform_conv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_perform_conv_1_fu_257_ap_start,
        ap_done => grp_dut_perform_conv_1_fu_257_ap_done,
        ap_idle => grp_dut_perform_conv_1_fu_257_ap_idle,
        ap_ready => grp_dut_perform_conv_1_fu_257_ap_ready,
        input_V_address0 => grp_dut_perform_conv_1_fu_257_input_V_address0,
        input_V_ce0 => grp_dut_perform_conv_1_fu_257_input_V_ce0,
        input_V_q0 => mem_conv2_0_V_q0,
        input_V_address1 => grp_dut_perform_conv_1_fu_257_input_V_address1,
        input_V_ce1 => grp_dut_perform_conv_1_fu_257_input_V_ce1,
        input_V_q1 => mem_conv2_0_V_q1,
        input_V1_address0 => grp_dut_perform_conv_1_fu_257_input_V1_address0,
        input_V1_ce0 => grp_dut_perform_conv_1_fu_257_input_V1_ce0,
        input_V1_q0 => mem_conv2_1_V_q0,
        input_V1_address1 => grp_dut_perform_conv_1_fu_257_input_V1_address1,
        input_V1_ce1 => grp_dut_perform_conv_1_fu_257_input_V1_ce1,
        input_V1_q1 => mem_conv2_1_V_q1,
        input_V2_address0 => grp_dut_perform_conv_1_fu_257_input_V2_address0,
        input_V2_ce0 => grp_dut_perform_conv_1_fu_257_input_V2_ce0,
        input_V2_q0 => mem_conv2_2_V_q0,
        input_V2_address1 => grp_dut_perform_conv_1_fu_257_input_V2_address1,
        input_V2_ce1 => grp_dut_perform_conv_1_fu_257_input_V2_ce1,
        input_V2_q1 => mem_conv2_2_V_q1,
        input_V3_address0 => grp_dut_perform_conv_1_fu_257_input_V3_address0,
        input_V3_ce0 => grp_dut_perform_conv_1_fu_257_input_V3_ce0,
        input_V3_q0 => mem_conv2_3_V_q0,
        input_V3_address1 => grp_dut_perform_conv_1_fu_257_input_V3_address1,
        input_V3_ce1 => grp_dut_perform_conv_1_fu_257_input_V3_ce1,
        input_V3_q1 => mem_conv2_3_V_q1,
        input_V4_address0 => grp_dut_perform_conv_1_fu_257_input_V4_address0,
        input_V4_ce0 => grp_dut_perform_conv_1_fu_257_input_V4_ce0,
        input_V4_q0 => mem_conv2_4_V_q0,
        input_V4_address1 => grp_dut_perform_conv_1_fu_257_input_V4_address1,
        input_V4_ce1 => grp_dut_perform_conv_1_fu_257_input_V4_ce1,
        input_V4_q1 => mem_conv2_4_V_q1,
        output_V_address0 => grp_dut_perform_conv_1_fu_257_output_V_address0,
        output_V_ce0 => grp_dut_perform_conv_1_fu_257_output_V_ce0,
        output_V_we0 => grp_dut_perform_conv_1_fu_257_output_V_we0,
        output_V_d0 => grp_dut_perform_conv_1_fu_257_output_V_d0,
        output_V_q0 => mem_conv1_0_V_q0,
        output_V5_address0 => grp_dut_perform_conv_1_fu_257_output_V5_address0,
        output_V5_ce0 => grp_dut_perform_conv_1_fu_257_output_V5_ce0,
        output_V5_we0 => grp_dut_perform_conv_1_fu_257_output_V5_we0,
        output_V5_d0 => grp_dut_perform_conv_1_fu_257_output_V5_d0,
        output_V5_q0 => mem_conv1_1_V_q0,
        output_V6_address0 => grp_dut_perform_conv_1_fu_257_output_V6_address0,
        output_V6_ce0 => grp_dut_perform_conv_1_fu_257_output_V6_ce0,
        output_V6_we0 => grp_dut_perform_conv_1_fu_257_output_V6_we0,
        output_V6_d0 => grp_dut_perform_conv_1_fu_257_output_V6_d0,
        output_V6_q0 => mem_conv1_2_V_q0);

    grp_dut_perform_conv_fu_273 : component dut_perform_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_perform_conv_fu_273_ap_start,
        ap_done => grp_dut_perform_conv_fu_273_ap_done,
        ap_idle => grp_dut_perform_conv_fu_273_ap_idle,
        ap_ready => grp_dut_perform_conv_fu_273_ap_ready,
        input_0_V_address0 => grp_dut_perform_conv_fu_273_input_0_V_address0,
        input_0_V_ce0 => grp_dut_perform_conv_fu_273_input_0_V_ce0,
        input_0_V_q0 => mem_conv1_0_V_q0,
        input_0_V_address1 => grp_dut_perform_conv_fu_273_input_0_V_address1,
        input_0_V_ce1 => grp_dut_perform_conv_fu_273_input_0_V_ce1,
        input_0_V_q1 => mem_conv1_0_V_q1,
        input_1_V_address0 => grp_dut_perform_conv_fu_273_input_1_V_address0,
        input_1_V_ce0 => grp_dut_perform_conv_fu_273_input_1_V_ce0,
        input_1_V_q0 => mem_conv1_1_V_q0,
        input_1_V_address1 => grp_dut_perform_conv_fu_273_input_1_V_address1,
        input_1_V_ce1 => grp_dut_perform_conv_fu_273_input_1_V_ce1,
        input_1_V_q1 => mem_conv1_1_V_q1,
        input_2_V_address0 => grp_dut_perform_conv_fu_273_input_2_V_address0,
        input_2_V_ce0 => grp_dut_perform_conv_fu_273_input_2_V_ce0,
        input_2_V_q0 => mem_conv1_2_V_q0,
        input_2_V_address1 => grp_dut_perform_conv_fu_273_input_2_V_address1,
        input_2_V_ce1 => grp_dut_perform_conv_fu_273_input_2_V_ce1,
        input_2_V_q1 => mem_conv1_2_V_q1,
        output_0_V_address0 => grp_dut_perform_conv_fu_273_output_0_V_address0,
        output_0_V_ce0 => grp_dut_perform_conv_fu_273_output_0_V_ce0,
        output_0_V_we0 => grp_dut_perform_conv_fu_273_output_0_V_we0,
        output_0_V_d0 => grp_dut_perform_conv_fu_273_output_0_V_d0,
        output_0_V_q0 => mem_conv2_0_V_q0,
        output_1_V_address0 => grp_dut_perform_conv_fu_273_output_1_V_address0,
        output_1_V_ce0 => grp_dut_perform_conv_fu_273_output_1_V_ce0,
        output_1_V_we0 => grp_dut_perform_conv_fu_273_output_1_V_we0,
        output_1_V_d0 => grp_dut_perform_conv_fu_273_output_1_V_d0,
        output_1_V_q0 => mem_conv2_1_V_q0,
        output_2_V_address0 => grp_dut_perform_conv_fu_273_output_2_V_address0,
        output_2_V_ce0 => grp_dut_perform_conv_fu_273_output_2_V_ce0,
        output_2_V_we0 => grp_dut_perform_conv_fu_273_output_2_V_we0,
        output_2_V_d0 => grp_dut_perform_conv_fu_273_output_2_V_d0,
        output_2_V_q0 => mem_conv2_2_V_q0,
        output_3_V_address0 => grp_dut_perform_conv_fu_273_output_3_V_address0,
        output_3_V_ce0 => grp_dut_perform_conv_fu_273_output_3_V_ce0,
        output_3_V_we0 => grp_dut_perform_conv_fu_273_output_3_V_we0,
        output_3_V_d0 => grp_dut_perform_conv_fu_273_output_3_V_d0,
        output_3_V_q0 => mem_conv2_3_V_q0,
        output_4_V_address0 => grp_dut_perform_conv_fu_273_output_4_V_address0,
        output_4_V_ce0 => grp_dut_perform_conv_fu_273_output_4_V_ce0,
        output_4_V_we0 => grp_dut_perform_conv_fu_273_output_4_V_we0,
        output_4_V_d0 => grp_dut_perform_conv_fu_273_output_4_V_d0,
        output_4_V_q0 => mem_conv2_4_V_q0);

    dut_sitofp_32s_32_6_U94 : component dut_sitofp_32s_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_289_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_289_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dut_perform_conv_1_fu_257_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_perform_conv_1_fu_257_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_grp_dut_perform_conv_1_fu_257_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_perform_conv_1_fu_257_ap_ready)) then 
                    ap_reg_grp_dut_perform_conv_1_fu_257_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_perform_conv_fu_273_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_perform_conv_fu_273_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_296_p2 = ap_const_lv1_0)))) then 
                    ap_reg_grp_dut_perform_conv_fu_273_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_perform_conv_fu_273_ap_ready)) then 
                    ap_reg_grp_dut_perform_conv_fu_273_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bvh_d_index_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0))) then 
                bvh_d_index_reg_190 <= i_fu_302_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                bvh_d_index_reg_190 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i2_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                i2_reg_223 <= i_3_reg_545;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_dut_perform_conv_1_fu_257_ap_done)))) then 
                i2_reg_223 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    phi_mul4_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                phi_mul4_reg_235 <= next_mul5_reg_555;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_dut_perform_conv_1_fu_257_ap_done)))) then 
                phi_mul4_reg_235 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_201 <= next_mul_fu_334_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul_reg_201 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    phi_urem6_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                phi_urem6_reg_246 <= idx_urem8_reg_550;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_dut_perform_conv_1_fu_257_ap_done)))) then 
                phi_urem6_reg_246 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_212 <= idx_urem_fu_369_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_urem_reg_212 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                i_3_reg_545 <= i_3_fu_383_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond_fu_377_p2))) then
                idx_urem8_reg_550 <= idx_urem8_fu_401_p3;
                next_mul5_reg_555 <= next_mul5_fu_413_p2;
                sel_tmp2_reg_580 <= sel_tmp2_fu_442_p2;
                sel_tmp_reg_575 <= sel_tmp_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                mem_conv1_V_load_phi_reg_585 <= mem_conv1_V_load_phi_fu_455_p3;
                tmp_17_reg_590 <= tmp_17_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_17_reg_590) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then
                p_Result_s_reg_600 <= p_Result_s_fu_492_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond5_fu_296_p2, exitcond_fu_377_p2, grp_dut_perform_conv_1_fu_257_ap_done, grp_dut_perform_conv_fu_273_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((exitcond5_fu_296_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_dut_perform_conv_fu_273_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_dut_perform_conv_1_fu_257_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = exitcond_fu_377_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st6_fsm_5, exitcond_fu_377_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond_fu_377_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, exitcond_fu_377_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond_fu_377_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_110_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_110 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_31_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_31 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_339_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_339 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_349_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_349 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_363_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_363 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_397_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_397 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_56_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_56 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_73_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_73 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_99_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_99 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_349)
    begin
        if (ap_sig_349) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_31)
    begin
        if (ap_sig_31) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_56)
    begin
        if (ap_sig_56) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_397)
    begin
        if (ap_sig_397) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_363)
    begin
        if (ap_sig_363) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_339)
    begin
        if (ap_sig_339) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_73)
    begin
        if (ap_sig_73) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_99)
    begin
        if (ap_sig_99) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_110)
    begin
        if (ap_sig_110) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond5_fu_296_p2 <= "1" when (bvh_d_index_reg_190 = ap_const_lv6_31) else "0";
    exitcond_fu_377_p2 <= "1" when (i2_reg_223 = ap_const_lv10_240) else "0";
    exp_V_2_fu_486_p2 <= std_logic_vector(signed(ap_const_lv8_F4) + signed(exp_V_fu_476_p4));
    exp_V_fu_476_p4 <= res_V_1_fu_472_p1(30 downto 23);
    grp_dut_perform_conv_1_fu_257_ap_start <= ap_reg_grp_dut_perform_conv_1_fu_257_ap_start;
    grp_dut_perform_conv_fu_273_ap_start <= ap_reg_grp_dut_perform_conv_fu_273_ap_start;
        grp_fu_289_p0 <= std_logic_vector(resize(signed(mem_conv1_V_load_phi_reg_585),32));

    i_3_fu_383_p2 <= std_logic_vector(unsigned(i2_reg_223) + unsigned(ap_const_lv10_1));
    i_fu_302_p2 <= std_logic_vector(unsigned(bvh_d_index_reg_190) + unsigned(ap_const_lv6_1));
    idx_urem8_fu_401_p3 <= 
        next_urem7_fu_389_p2 when (tmp_72_fu_395_p2(0) = '1') else 
        ap_const_lv10_0;
    idx_urem_fu_369_p3 <= 
        next_urem_fu_357_p2 when (tmp_75_fu_363_p2(0) = '1') else 
        ap_const_lv6_0;
    index_assign_cast6_fu_292_p1 <= std_logic_vector(resize(unsigned(bvh_d_index_reg_190),32));

    mem_conv1_0_V_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V_address0, grp_dut_perform_conv_fu_273_input_0_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, newIndex_fu_350_p1, newIndex3_fu_429_p1, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_0))) then 
            mem_conv1_0_V_address0 <= newIndex_fu_350_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_0_V_address0 <= newIndex3_fu_429_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_0_V_address0 <= grp_dut_perform_conv_fu_273_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_0_V_address0 <= grp_dut_perform_conv_1_fu_257_output_V_address0;
        else 
            mem_conv1_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V_ce0, grp_dut_perform_conv_fu_273_input_0_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_0)))) then 
            mem_conv1_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_0_V_ce0 <= grp_dut_perform_conv_fu_273_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_0_V_ce0 <= grp_dut_perform_conv_1_fu_257_output_V_ce0;
        else 
            mem_conv1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_V_ce1_assign_proc : process(grp_dut_perform_conv_fu_273_input_0_V_ce1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_0_V_ce1 <= grp_dut_perform_conv_fu_273_input_0_V_ce1;
        else 
            mem_conv1_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_V_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V_d0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1, tmp_22_cast_fu_323_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_0))) then 
            mem_conv1_0_V_d0 <= tmp_22_cast_fu_323_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_0_V_d0 <= grp_dut_perform_conv_1_fu_257_output_V_d0;
        else 
            mem_conv1_0_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V_we0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_0)))) then 
            mem_conv1_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_0_V_we0 <= grp_dut_perform_conv_1_fu_257_output_V_we0;
        else 
            mem_conv1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_V_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V5_address0, grp_dut_perform_conv_fu_273_input_1_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, newIndex_fu_350_p1, newIndex3_fu_429_p1, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_1))) then 
            mem_conv1_1_V_address0 <= newIndex_fu_350_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_1_V_address0 <= newIndex3_fu_429_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_1_V_address0 <= grp_dut_perform_conv_fu_273_input_1_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_1_V_address0 <= grp_dut_perform_conv_1_fu_257_output_V5_address0;
        else 
            mem_conv1_1_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    mem_conv1_1_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V5_ce0, grp_dut_perform_conv_fu_273_input_1_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_1)))) then 
            mem_conv1_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_1_V_ce0 <= grp_dut_perform_conv_fu_273_input_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_1_V_ce0 <= grp_dut_perform_conv_1_fu_257_output_V5_ce0;
        else 
            mem_conv1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_V_ce1_assign_proc : process(grp_dut_perform_conv_fu_273_input_1_V_ce1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_1_V_ce1 <= grp_dut_perform_conv_fu_273_input_1_V_ce1;
        else 
            mem_conv1_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_V_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V5_d0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1, tmp_22_cast_fu_323_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_1))) then 
            mem_conv1_1_V_d0 <= tmp_22_cast_fu_323_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_1_V_d0 <= grp_dut_perform_conv_1_fu_257_output_V5_d0;
        else 
            mem_conv1_1_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_1_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V5_we0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and (tmp_70_fu_330_p1 = ap_const_lv3_1)))) then 
            mem_conv1_1_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_1_V_we0 <= grp_dut_perform_conv_1_fu_257_output_V5_we0;
        else 
            mem_conv1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_2_V_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V6_address0, grp_dut_perform_conv_fu_273_input_2_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, newIndex_fu_350_p1, newIndex3_fu_429_p1, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and not((tmp_70_fu_330_p1 = ap_const_lv3_0)) and not((tmp_70_fu_330_p1 = ap_const_lv3_1)))) then 
            mem_conv1_2_V_address0 <= newIndex_fu_350_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_2_V_address0 <= newIndex3_fu_429_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_2_V_address0 <= grp_dut_perform_conv_fu_273_input_2_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_2_V_address0 <= grp_dut_perform_conv_1_fu_257_output_V6_address0;
        else 
            mem_conv1_2_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    mem_conv1_2_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, ap_sig_cseq_ST_st6_fsm_5, grp_dut_perform_conv_1_fu_257_output_V6_ce0, grp_dut_perform_conv_fu_273_input_2_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, tmp_70_fu_330_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and not((tmp_70_fu_330_p1 = ap_const_lv3_0)) and not((tmp_70_fu_330_p1 = ap_const_lv3_1))))) then 
            mem_conv1_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_2_V_ce0 <= grp_dut_perform_conv_fu_273_input_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_2_V_ce0 <= grp_dut_perform_conv_1_fu_257_output_V6_ce0;
        else 
            mem_conv1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_2_V_ce1_assign_proc : process(grp_dut_perform_conv_fu_273_input_2_V_ce1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv1_2_V_ce1 <= grp_dut_perform_conv_fu_273_input_2_V_ce1;
        else 
            mem_conv1_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_2_V_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V6_d0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1, tmp_22_cast_fu_323_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and not((tmp_70_fu_330_p1 = ap_const_lv3_0)) and not((tmp_70_fu_330_p1 = ap_const_lv3_1)))) then 
            mem_conv1_2_V_d0 <= tmp_22_cast_fu_323_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_2_V_d0 <= grp_dut_perform_conv_1_fu_257_output_V6_d0;
        else 
            mem_conv1_2_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_2_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond5_fu_296_p2, grp_dut_perform_conv_1_fu_257_output_V6_we0, ap_sig_cseq_ST_st5_fsm_4, tmp_70_fu_330_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_296_p2 = ap_const_lv1_0) and not((tmp_70_fu_330_p1 = ap_const_lv3_0)) and not((tmp_70_fu_330_p1 = ap_const_lv3_1))))) then 
            mem_conv1_2_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv1_2_V_we0 <= grp_dut_perform_conv_1_fu_257_output_V6_we0;
        else 
            mem_conv1_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_conv1_V_load_phi_fu_455_p3 <= 
        mem_conv1_1_V_q0 when (sel_tmp2_reg_580(0) = '1') else 
        sel_tmp1_fu_448_p3;

    mem_conv2_0_V_address0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V_address0, grp_dut_perform_conv_fu_273_output_0_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_0_V_address0 <= grp_dut_perform_conv_fu_273_output_0_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_0_V_address0 <= grp_dut_perform_conv_1_fu_257_input_V_address0;
        else 
            mem_conv2_0_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_0_V_ce0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V_ce0, grp_dut_perform_conv_fu_273_output_0_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_0_V_ce0 <= grp_dut_perform_conv_fu_273_output_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_0_V_ce0 <= grp_dut_perform_conv_1_fu_257_input_V_ce0;
        else 
            mem_conv2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_V_ce1_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_0_V_ce1 <= grp_dut_perform_conv_1_fu_257_input_V_ce1;
        else 
            mem_conv2_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_V_address0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V1_address0, grp_dut_perform_conv_fu_273_output_1_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_1_V_address0 <= grp_dut_perform_conv_fu_273_output_1_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_1_V_address0 <= grp_dut_perform_conv_1_fu_257_input_V1_address0;
        else 
            mem_conv2_1_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_1_V_ce0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V1_ce0, grp_dut_perform_conv_fu_273_output_1_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_1_V_ce0 <= grp_dut_perform_conv_fu_273_output_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_1_V_ce0 <= grp_dut_perform_conv_1_fu_257_input_V1_ce0;
        else 
            mem_conv2_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_V_ce1_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V1_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_1_V_ce1 <= grp_dut_perform_conv_1_fu_257_input_V1_ce1;
        else 
            mem_conv2_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_2_V_address0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V2_address0, grp_dut_perform_conv_fu_273_output_2_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_2_V_address0 <= grp_dut_perform_conv_fu_273_output_2_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_2_V_address0 <= grp_dut_perform_conv_1_fu_257_input_V2_address0;
        else 
            mem_conv2_2_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_2_V_ce0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V2_ce0, grp_dut_perform_conv_fu_273_output_2_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_2_V_ce0 <= grp_dut_perform_conv_fu_273_output_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_2_V_ce0 <= grp_dut_perform_conv_1_fu_257_input_V2_ce0;
        else 
            mem_conv2_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_2_V_ce1_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V2_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_2_V_ce1 <= grp_dut_perform_conv_1_fu_257_input_V2_ce1;
        else 
            mem_conv2_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_3_V_address0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V3_address0, grp_dut_perform_conv_fu_273_output_3_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_3_V_address0 <= grp_dut_perform_conv_fu_273_output_3_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_3_V_address0 <= grp_dut_perform_conv_1_fu_257_input_V3_address0;
        else 
            mem_conv2_3_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_3_V_ce0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V3_ce0, grp_dut_perform_conv_fu_273_output_3_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_3_V_ce0 <= grp_dut_perform_conv_fu_273_output_3_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_3_V_ce0 <= grp_dut_perform_conv_1_fu_257_input_V3_ce0;
        else 
            mem_conv2_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_3_V_ce1_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V3_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_3_V_ce1 <= grp_dut_perform_conv_1_fu_257_input_V3_ce1;
        else 
            mem_conv2_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_4_V_address0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V4_address0, grp_dut_perform_conv_fu_273_output_4_V_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_4_V_address0 <= grp_dut_perform_conv_fu_273_output_4_V_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_4_V_address0 <= grp_dut_perform_conv_1_fu_257_input_V4_address0;
        else 
            mem_conv2_4_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_4_V_ce0_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V4_ce0, grp_dut_perform_conv_fu_273_output_4_V_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            mem_conv2_4_V_ce0 <= grp_dut_perform_conv_fu_273_output_4_V_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_4_V_ce0 <= grp_dut_perform_conv_1_fu_257_input_V4_ce0;
        else 
            mem_conv2_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_4_V_ce1_assign_proc : process(grp_dut_perform_conv_1_fu_257_input_V4_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            mem_conv2_4_V_ce1 <= grp_dut_perform_conv_1_fu_257_input_V4_ce1;
        else 
            mem_conv2_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    newIndex3_fu_429_p1 <= std_logic_vector(resize(unsigned(tmp_74_fu_419_p4),64));
    newIndex_fu_350_p1 <= std_logic_vector(resize(unsigned(tmp_71_fu_340_p4),64));
    next_mul5_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv20_556) + unsigned(phi_mul4_reg_235));
    next_mul_fu_334_p2 <= std_logic_vector(unsigned(ap_const_lv13_56) + unsigned(phi_mul_reg_201));
    next_urem7_fu_389_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(phi_urem6_reg_246));
    next_urem_fu_357_p2 <= std_logic_vector(unsigned(phi_urem_reg_212) + unsigned(ap_const_lv6_1));
    output_V_address0 <= tmp_16_fu_504_p1(10 - 1 downto 0);

    output_V_ce0_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_V_d0 <= 
        ap_const_lv32_0 when (tmp_17_reg_590(0) = '1') else 
        p_Result_s_reg_600;

    output_V_we0_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_492_p5 <= (res_V_1_fu_472_p1(31 downto 31) & exp_V_2_fu_486_p2 & res_V_1_fu_472_p1(22 downto 0));
    res_V_1_fu_472_p1 <= grp_fu_289_p1;
    sel_tmp1_fu_448_p3 <= 
        mem_conv1_0_V_q0 when (sel_tmp_reg_575(0) = '1') else 
        mem_conv1_2_V_q0;
    sel_tmp2_fu_442_p2 <= "1" when (tmp_73_fu_409_p1 = ap_const_lv3_1) else "0";
    sel_tmp_fu_436_p2 <= "1" when (tmp_73_fu_409_p1 = ap_const_lv3_0) else "0";
    tmp_16_fu_504_p1 <= std_logic_vector(resize(unsigned(i2_reg_223),64));
    tmp_17_fu_462_p2 <= "1" when (mem_conv1_V_load_phi_fu_455_p3 = ap_const_lv14_0) else "0";
    tmp_22_cast_fu_323_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_315_p3),14));
    tmp_70_fu_330_p1 <= phi_urem_reg_212(3 - 1 downto 0);
    tmp_71_fu_340_p4 <= phi_mul_reg_201(12 downto 8);
    tmp_72_fu_395_p2 <= "1" when (unsigned(next_urem7_fu_389_p2) < unsigned(ap_const_lv10_3)) else "0";
    tmp_73_fu_409_p1 <= phi_urem6_reg_246(3 - 1 downto 0);
    tmp_74_fu_419_p4 <= phi_mul4_reg_235(19 downto 12);
    tmp_75_fu_363_p2 <= "1" when (unsigned(next_urem_fu_357_p2) < unsigned(ap_const_lv6_3)) else "0";
    tmp_fu_308_p3 <= input_V(to_integer(unsigned(index_assign_cast6_fu_292_p1)) downto to_integer(unsigned(index_assign_cast6_fu_292_p1))) when (to_integer(unsigned(index_assign_cast6_fu_292_p1))>= 0 and to_integer(unsigned(index_assign_cast6_fu_292_p1))<=48) else "-";
    tmp_s_fu_315_p3 <= (tmp_fu_308_p3 & ap_const_lv12_0);
end behav;
