-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_perform_conv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weight_V_ce0 : OUT STD_LOGIC;
    weight_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    M : IN STD_LOGIC_VECTOR (7 downto 0);
    N : IN STD_LOGIC_VECTOR (7 downto 0);
    O : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of dut_perform_conv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv10_320 : STD_LOGIC_VECTOR (9 downto 0) := "1100100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_34 : BOOLEAN;
    signal I_cast24_cast_fu_339_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal I_cast24_cast_reg_808 : STD_LOGIC_VECTOR (10 downto 0);
    signal I_cast_cast_fu_343_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal I_cast_cast_reg_813 : STD_LOGIC_VECTOR (7 downto 0);
    signal ofmap_size_fu_351_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ofmap_size_reg_818 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_fu_363_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_90 : BOOLEAN;
    signal tmp_4_fu_374_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_reg_831 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_377_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_reg_836 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_380_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_reg_842 : STD_LOGIC_VECTOR (6 downto 0);
    signal O_cast4_fu_383_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal O_cast4_reg_847 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul8_fu_386_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal next_mul8_reg_853 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal next_mul3_fu_391_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal next_mul3_reg_858 : STD_LOGIC_VECTOR (10 downto 0);
    signal n_1_fu_405_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal n_1_reg_866 : STD_LOGIC_VECTOR (6 downto 0);
    signal m_1_fu_428_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_1_reg_874 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_125 : BOOLEAN;
    signal tmp_8_fu_434_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_879 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_cast_fu_467_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_cast_reg_884 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_cast1_fu_471_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_cast1_reg_889 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_142 : BOOLEAN;
    signal x_1_fu_484_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_1_reg_898 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_mul_fu_490_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul_reg_903 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_153 : BOOLEAN;
    signal y_cast1_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_cast1_reg_908 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_fu_508_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_1_reg_916 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_V_addr_2_reg_921 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond2_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_cast_fu_534_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_cast_reg_926 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_171 : BOOLEAN;
    signal c_cast1_fu_538_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_cast1_reg_931 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_1_fu_548_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_1_reg_939 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_1_fu_568_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_1_reg_947 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_184 : BOOLEAN;
    signal tmp_fu_579_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_952 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_index_reg_957 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_619_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp1_reg_962 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_209 : BOOLEAN;
    signal input_V_load_reg_977 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal weight_V_load_reg_982 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul1_fu_666_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal next_mul1_reg_987 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_229 : BOOLEAN;
    signal n_2_fu_680_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal n_2_reg_995 : STD_LOGIC_VECTOR (6 downto 0);
    signal bias_V_addr_reg_1000 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x2_cast9_fu_691_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x2_cast9_reg_1005 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_246 : BOOLEAN;
    signal x_2_fu_704_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_2_reg_1013 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_2_fu_719_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_2_reg_1021 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_257 : BOOLEAN;
    signal next_mul2_fu_725_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul2_reg_1026 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_addr_1_reg_1031 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_s_fu_766_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_s_reg_1036 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_273 : BOOLEAN;
    signal i_reg_161 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_reg_172 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul2_reg_183 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_mul7_reg_195 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_reg_207 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_reg_218 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_reg_229 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond3_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul_reg_240 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_reg_251 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_reg_262 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_325 : BOOLEAN;
    signal n1_reg_273 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul1_reg_284 : STD_LOGIC_VECTOR (10 downto 0);
    signal x2_reg_296 : STD_LOGIC_VECTOR (2 downto 0);
    signal y3_reg_307 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_347 : BOOLEAN;
    signal phi_mul9_reg_318 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_774_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_329_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal I_fu_333_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ofmap_size_fu_351_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal O_cast2_fu_347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ofmap_size_fu_351_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_cast_fu_396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_cast_fu_419_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_434_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_434_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_cast1_fu_411_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_fu_439_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_fu_449_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_cast1_fu_445_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_cast_fu_457_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp5_fu_461_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cast_fu_475_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_cast_fu_499_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_cast_fu_514_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_fu_518_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal o_index_fu_524_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_cast_fu_554_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_574_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_fu_584_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_592_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_cast1_fu_558_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_fu_596_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_fu_602_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_cast_fu_607_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_619_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp1_fu_619_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_624_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_index_fu_628_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_778_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal n1_cast_fu_671_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x2_cast_fu_695_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal y3_cast_fu_710_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_cast_fu_730_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_fu_734_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal index_fu_740_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_fu_750_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_756_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_778_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_fu_619_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_434_p00 : STD_LOGIC_VECTOR (7 downto 0);

    component dut_mac_muladd_16s_16s_30ns_30_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    dut_mac_muladd_16s_16s_30ns_30_1_U1 : component dut_mac_muladd_16s_16s_30ns_30_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => input_V_load_reg_977,
        din1 => weight_V_load_reg_982,
        din2 => grp_fu_778_p2,
        dout => grp_fu_778_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond4_fu_562_p2)))) then 
                c_reg_251 <= c_1_reg_939;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond2_fu_503_p2))) then 
                c_reg_251 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_357_p2 = ap_const_lv1_0))) then 
                i_reg_161 <= i_1_fu_363_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_161 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    m_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_10_fu_479_p2))) then 
                m_reg_207 <= m_1_reg_874;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_3_fu_400_p2)))) then 
                m_reg_207 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    n1_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_11_fu_699_p2))) then 
                n1_reg_273 <= n_2_reg_995;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_3_fu_400_p2))) then 
                n1_reg_273 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    n_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = tmp_6_fu_423_p2))) then 
                n_reg_172 <= n_1_reg_866;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_357_p2 = ap_const_lv1_0)))) then 
                n_reg_172 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_11_fu_699_p2))) then 
                phi_mul1_reg_284 <= next_mul1_reg_987;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_3_fu_400_p2))) then 
                phi_mul1_reg_284 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    phi_mul2_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = tmp_6_fu_423_p2))) then 
                phi_mul2_reg_183 <= next_mul3_reg_858;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_357_p2 = ap_const_lv1_0)))) then 
                phi_mul2_reg_183 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    phi_mul7_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = tmp_6_fu_423_p2))) then 
                phi_mul7_reg_195 <= next_mul8_reg_853;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_357_p2 = ap_const_lv1_0)))) then 
                phi_mul7_reg_195 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    phi_mul9_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = tmp_11_fu_699_p2)))) then 
                phi_mul9_reg_318 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                phi_mul9_reg_318 <= next_mul2_reg_1026;
            end if; 
        end if;
    end process;

    phi_mul_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_542_p2)))) then 
                phi_mul_reg_240 <= next_mul_reg_903;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_10_fu_479_p2)))) then 
                phi_mul_reg_240 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond3_fu_542_p2))) then 
                r_reg_262 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                r_reg_262 <= r_1_reg_947;
            end if; 
        end if;
    end process;

    x2_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = exitcond_fu_714_p2)))) then 
                x2_reg_296 <= x_2_reg_1013;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = tmp_7_fu_675_p2)))) then 
                x2_reg_296 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    x_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond2_fu_503_p2)))) then 
                x_reg_218 <= x_1_reg_898;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_6_fu_423_p2)))) then 
                x_reg_218 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    y3_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = tmp_11_fu_699_p2)))) then 
                y3_reg_307 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
                y3_reg_307 <= y_2_reg_1021;
            end if; 
        end if;
    end process;

    y_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_542_p2)))) then 
                y_reg_229 <= y_1_reg_916;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_10_fu_479_p2)))) then 
                y_reg_229 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    I_cast24_cast_reg_808(2 downto 0) <= I_cast24_cast_fu_339_p1(2 downto 0);
                    I_cast_cast_reg_813(2 downto 0) <= I_cast_cast_fu_343_p1(2 downto 0);
                ofmap_size_reg_818 <= ofmap_size_fu_351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_357_p2 = ap_const_lv1_0)))) then
                    O_cast4_reg_847(3 downto 0) <= O_cast4_fu_383_p1(3 downto 0);
                tmp_12_reg_842 <= tmp_12_fu_380_p1;
                    tmp_4_reg_831(7 downto 0) <= tmp_4_fu_374_p1(7 downto 0);
                    tmp_5_reg_836(7 downto 0) <= tmp_5_fu_377_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = tmp_7_fu_675_p2)))) then
                bias_V_addr_reg_1000 <= tmp_s_fu_686_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                c_1_reg_939 <= c_1_fu_548_p2;
                    c_cast1_reg_931(1 downto 0) <= c_cast1_fu_538_p1(1 downto 0);
                    c_cast_reg_926(1 downto 0) <= c_cast_fu_534_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                input_V_load_reg_977 <= input_V_q0;
                weight_V_load_reg_982 <= weight_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                m_1_reg_874 <= m_1_fu_428_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                n_1_reg_866 <= n_1_fu_405_p2;
                next_mul3_reg_858 <= next_mul3_fu_391_p2;
                next_mul8_reg_853 <= next_mul8_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                n_2_reg_995 <= n_2_fu_680_p2;
                next_mul1_reg_987 <= next_mul1_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_lv1_0 = exitcond_fu_714_p2))) then
                next_mul2_reg_1026 <= next_mul2_fu_725_p2;
                output_V_addr_1_reg_1031 <= tmp_14_fu_745_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                next_mul_reg_903 <= next_mul_fu_490_p2;
                y_1_reg_916 <= y_1_fu_508_p2;
                    y_cast1_reg_908(2 downto 0) <= y_cast1_fu_495_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond2_fu_503_p2))) then
                output_V_addr_2_reg_921 <= tmp_13_fu_529_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                p_s_reg_1036 <= p_s_fu_766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                r_1_reg_947 <= r_1_fu_568_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tmp1_reg_962 <= tmp1_fu_619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_6_fu_423_p2)))) then
                    tmp5_cast_reg_884(14 downto 0) <= tmp5_cast_fu_467_p1(14 downto 0);
                tmp_8_reg_879 <= tmp_8_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond4_fu_562_p2))) then
                tmp_reg_952 <= tmp_fu_579_p2;
                w_index_reg_957 <= w_index_fu_611_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                    x2_cast9_reg_1005(2 downto 0) <= x2_cast9_fu_691_p1(2 downto 0);
                x_2_reg_1013 <= x_2_fu_704_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                x_1_reg_898 <= x_1_fu_484_p2;
                    x_cast1_reg_889(2 downto 0) <= x_cast1_fu_471_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                y_2_reg_1021 <= y_2_fu_719_p2;
            end if;
        end if;
    end process;
    I_cast24_cast_reg_808(10 downto 3) <= "00000000";
    I_cast_cast_reg_813(7 downto 3) <= "00000";
    tmp_4_reg_831(10 downto 8) <= "000";
    tmp_5_reg_836(10 downto 8) <= "000";
    O_cast4_reg_847(6 downto 4) <= "000";
    tmp5_cast_reg_884(15) <= '0';
    x_cast1_reg_889(10 downto 3) <= "00000000";
    y_cast1_reg_908(7 downto 3) <= "00000";
    c_cast_reg_926(4 downto 2) <= "000";
    c_cast1_reg_931(10 downto 2) <= "000000000";
    x2_cast9_reg_1005(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_357_p2, tmp_6_fu_423_p2, exitcond2_fu_503_p2, exitcond4_fu_562_p2, tmp_7_fu_675_p2, exitcond_fu_714_p2, tmp_3_fu_400_p2, tmp_10_fu_479_p2, exitcond3_fu_542_p2, tmp_11_fu_699_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_357_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_3_fu_400_p2)) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = tmp_6_fu_423_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = tmp_10_fu_479_p2))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st6_fsm_5 => 
                if ((ap_const_lv1_0 = exitcond2_fu_503_p2)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = exitcond3_fu_542_p2)) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st8_fsm_7 => 
                if ((ap_const_lv1_0 = exitcond4_fu_562_p2)) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st13_fsm_12 => 
                if ((ap_const_lv1_0 = tmp_7_fu_675_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_lv1_0 = tmp_11_fu_699_p2))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st15_fsm_14 => 
                if ((ap_const_lv1_0 = exitcond_fu_714_p2)) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    I_cast24_cast_fu_339_p1 <= std_logic_vector(resize(unsigned(I_fu_333_p2),11));
    I_cast_cast_fu_343_p1 <= std_logic_vector(resize(unsigned(I_fu_333_p2),8));
    I_fu_333_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(tmp_2_fu_329_p1));
    O_cast2_fu_347_p1 <= std_logic_vector(resize(unsigned(O),8));
    O_cast4_fu_383_p1 <= std_logic_vector(resize(unsigned(O),7));

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st13_fsm_12, tmp_7_fu_675_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = tmp_7_fu_675_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_7_fu_675_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = tmp_7_fu_675_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_125_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_125 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_142_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_142 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_153 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_171_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_171 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_184_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_184 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_209_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_209 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_229_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_229 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_246_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_246 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_257_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_257 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_273_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_273 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_325_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_325 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_34_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_34 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_347_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_347 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_90 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_209)
    begin
        if (ap_sig_209) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_325)
    begin
        if (ap_sig_325) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_229)
    begin
        if (ap_sig_229) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_246)
    begin
        if (ap_sig_246) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_257)
    begin
        if (ap_sig_257) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_273)
    begin
        if (ap_sig_273) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_347)
    begin
        if (ap_sig_347) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_34)
    begin
        if (ap_sig_34) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_90)
    begin
        if (ap_sig_90) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_125)
    begin
        if (ap_sig_125) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_142)
    begin
        if (ap_sig_142) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_153)
    begin
        if (ap_sig_153) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_171)
    begin
        if (ap_sig_171) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_184)
    begin
        if (ap_sig_184) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_address0 <= bias_V_addr_reg_1000;

    bias_V_ce0_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c_1_fu_548_p2 <= std_logic_vector(unsigned(c_reg_251) + unsigned(ap_const_lv2_1));
    c_cast1_fu_538_p1 <= std_logic_vector(resize(unsigned(c_reg_251),11));
    c_cast_fu_534_p1 <= std_logic_vector(resize(unsigned(c_reg_251),5));
    exitcond1_fu_357_p2 <= "1" when (i_reg_161 = ap_const_lv10_320) else "0";
    exitcond2_fu_503_p2 <= "1" when (y_cast_fu_499_p1 = O) else "0";
    exitcond3_fu_542_p2 <= "1" when (c_reg_251 = ap_const_lv2_3) else "0";
    exitcond4_fu_562_p2 <= "1" when (r_reg_262 = ap_const_lv2_3) else "0";
    exitcond_fu_714_p2 <= "1" when (y3_cast_fu_710_p1 = O) else "0";
    grp_fu_778_p2 <= (output_V_q0 & ap_const_lv14_0);
    i_1_fu_363_p2 <= std_logic_vector(unsigned(i_reg_161) + unsigned(ap_const_lv10_1));
    i_index_fu_628_p2 <= std_logic_vector(unsigned(x_cast1_reg_889) + unsigned(tmp4_fu_624_p2));
    index_fu_740_p2 <= std_logic_vector(unsigned(x2_cast9_reg_1005) + unsigned(tmp7_fu_734_p2));
    input_V_address0 <= tmp_18_fu_633_p1(10 - 1 downto 0);

    input_V_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    m_1_fu_428_p2 <= std_logic_vector(unsigned(m_reg_207) + unsigned(ap_const_lv6_1));
    m_cast1_fu_411_p1 <= std_logic_vector(resize(unsigned(m_reg_207),11));
    m_cast_fu_419_p1 <= std_logic_vector(resize(unsigned(m_reg_207),7));
    n1_cast_fu_671_p1 <= std_logic_vector(resize(unsigned(n1_reg_273),8));
    n_1_fu_405_p2 <= std_logic_vector(unsigned(n_reg_172) + unsigned(ap_const_lv7_1));
    n_2_fu_680_p2 <= std_logic_vector(unsigned(n1_reg_273) + unsigned(ap_const_lv7_1));
    n_cast_fu_396_p1 <= std_logic_vector(resize(unsigned(n_reg_172),8));
    next_mul1_fu_666_p2 <= std_logic_vector(unsigned(phi_mul1_reg_284) + unsigned(tmp_5_reg_836));
    next_mul2_fu_725_p2 <= std_logic_vector(unsigned(O_cast4_reg_847) + unsigned(phi_mul9_reg_318));
    next_mul3_fu_391_p2 <= std_logic_vector(unsigned(phi_mul2_reg_183) + unsigned(tmp_4_reg_831));
    next_mul8_fu_386_p2 <= std_logic_vector(unsigned(phi_mul7_reg_195) + unsigned(tmp_5_reg_836));
    next_mul_fu_490_p2 <= std_logic_vector(unsigned(phi_mul_reg_240) + unsigned(O_cast4_reg_847));
    o_index_fu_524_p2 <= std_logic_vector(unsigned(x_cast1_reg_889) + unsigned(tmp2_fu_518_p2));
    ofmap_size_fu_351_p0 <= O_cast2_fu_347_p1(4 - 1 downto 0);
    ofmap_size_fu_351_p1 <= O_cast2_fu_347_p1(4 - 1 downto 0);
    ofmap_size_fu_351_p2 <= std_logic_vector(resize(unsigned(ofmap_size_fu_351_p0) * unsigned(ofmap_size_fu_351_p1), 8));

    output_V_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, output_V_addr_2_reg_921, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, output_V_addr_1_reg_1031, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st17_fsm_16, tmp_1_fu_369_p1, tmp_14_fu_745_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            output_V_address0 <= output_V_addr_1_reg_1031;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            output_V_address0 <= tmp_1_fu_369_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            output_V_address0 <= tmp_14_fu_745_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            output_V_address0 <= output_V_addr_2_reg_921;
        else 
            output_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    output_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_V_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st17_fsm_16, p_cast_fu_774_p1, grp_fu_778_p3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            output_V_d0 <= p_cast_fu_774_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            output_V_d0 <= grp_fu_778_p3(29 downto 14);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            output_V_d0 <= ap_const_lv16_0;
        else 
            output_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_357_p2, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_357_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_2_fu_750_p2 <= std_logic_vector(unsigned(bias_V_q0) + unsigned(output_V_q0));
    p_cast_fu_774_p1 <= std_logic_vector(resize(unsigned(p_s_reg_1036),16));
    p_s_fu_766_p3 <= 
        tmp_15_fu_756_p1 when (tmp_16_fu_760_p2(0) = '1') else 
        ap_const_lv15_0;
    p_shl1_cast_fu_592_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_584_p3),5));
    p_shl1_fu_584_p3 <= (r_reg_262 & ap_const_lv2_0);
    p_shl_cast_fu_457_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_449_p3),15));
    p_shl_fu_449_p3 <= (tmp_9_fu_439_p2 & ap_const_lv3_0);
    r_1_fu_568_p2 <= std_logic_vector(unsigned(r_reg_262) + unsigned(ap_const_lv2_1));
    r_cast1_fu_558_p1 <= std_logic_vector(resize(unsigned(r_reg_262),5));
    r_cast_fu_554_p1 <= std_logic_vector(resize(unsigned(r_reg_262),8));
    tmp1_fu_619_p0 <= I_cast24_cast_reg_808(3 - 1 downto 0);
    tmp1_fu_619_p1 <= tmp1_fu_619_p10(8 - 1 downto 0);
    tmp1_fu_619_p10 <= std_logic_vector(resize(unsigned(tmp_reg_952),11));
    tmp1_fu_619_p2 <= std_logic_vector(resize(unsigned(tmp1_fu_619_p0) * unsigned(tmp1_fu_619_p1), 11));
    tmp2_fu_518_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_514_p1) + unsigned(phi_mul7_reg_195));
    tmp3_fu_574_p2 <= std_logic_vector(unsigned(r_cast_fu_554_p1) + unsigned(tmp_8_reg_879));
    tmp4_fu_624_p2 <= std_logic_vector(unsigned(tmp1_reg_962) + unsigned(c_cast1_reg_931));
    tmp5_cast_fu_467_p1 <= std_logic_vector(resize(unsigned(tmp5_fu_461_p2),16));
    tmp5_fu_461_p2 <= std_logic_vector(unsigned(tmp_9_cast1_fu_445_p1) + unsigned(p_shl_cast_fu_457_p1));
        tmp6_cast_fu_607_p1 <= std_logic_vector(resize(signed(tmp6_fu_602_p2),16));

    tmp6_fu_602_p2 <= std_logic_vector(unsigned(tmp_17_fu_596_p2) + unsigned(c_cast_reg_926));
    tmp7_fu_734_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_730_p1) + unsigned(phi_mul1_reg_284));
    tmp_10_fu_479_p2 <= "1" when (signed(x_cast_fu_475_p1) < signed(O)) else "0";
    tmp_11_fu_699_p2 <= "1" when (signed(x2_cast_fu_695_p1) < signed(O)) else "0";
    tmp_12_fu_380_p1 <= M(7 - 1 downto 0);
    tmp_13_cast_fu_514_p1 <= std_logic_vector(resize(unsigned(phi_mul_reg_240),11));
    tmp_13_fu_529_p1 <= std_logic_vector(resize(unsigned(o_index_fu_524_p2),64));
    tmp_14_fu_745_p1 <= std_logic_vector(resize(unsigned(index_fu_740_p2),64));
    tmp_15_fu_756_p1 <= p_Val2_2_fu_750_p2(15 - 1 downto 0);
    tmp_16_cast_fu_730_p1 <= std_logic_vector(resize(unsigned(phi_mul9_reg_318),11));
    tmp_16_fu_760_p2 <= "1" when (signed(p_Val2_2_fu_750_p2) > signed(ap_const_lv16_0)) else "0";
    tmp_17_fu_596_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_592_p1) - unsigned(r_cast1_fu_558_p1));
    tmp_18_fu_633_p1 <= std_logic_vector(resize(unsigned(i_index_fu_628_p2),64));
        tmp_19_fu_638_p1 <= std_logic_vector(resize(signed(w_index_reg_957),64));

    tmp_1_fu_369_p1 <= std_logic_vector(resize(unsigned(i_reg_161),64));
    tmp_2_fu_329_p1 <= O(3 - 1 downto 0);
    tmp_3_fu_400_p2 <= "1" when (signed(n_cast_fu_396_p1) < signed(N)) else "0";
    tmp_4_fu_374_p1 <= std_logic_vector(resize(unsigned(M),11));
    tmp_5_fu_377_p1 <= std_logic_vector(resize(unsigned(ofmap_size_reg_818),11));
    tmp_6_fu_423_p2 <= "1" when (signed(m_cast_fu_419_p1) < signed(tmp_12_reg_842)) else "0";
    tmp_7_fu_675_p2 <= "1" when (signed(n1_cast_fu_671_p1) < signed(N)) else "0";
    tmp_8_fu_434_p0 <= tmp_8_fu_434_p00(6 - 1 downto 0);
    tmp_8_fu_434_p00 <= std_logic_vector(resize(unsigned(m_reg_207),8));
    tmp_8_fu_434_p1 <= I_cast_cast_reg_813(3 - 1 downto 0);
    tmp_8_fu_434_p2 <= std_logic_vector(resize(unsigned(tmp_8_fu_434_p0) * unsigned(tmp_8_fu_434_p1), 8));
    tmp_9_cast1_fu_445_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_439_p2),15));
    tmp_9_fu_439_p2 <= std_logic_vector(unsigned(m_cast1_fu_411_p1) + unsigned(phi_mul2_reg_183));
    tmp_fu_579_p2 <= std_logic_vector(unsigned(y_cast1_reg_908) + unsigned(tmp3_fu_574_p2));
    tmp_s_fu_686_p1 <= std_logic_vector(resize(unsigned(n1_reg_273),64));
    w_index_fu_611_p2 <= std_logic_vector(unsigned(tmp5_cast_reg_884) + unsigned(tmp6_cast_fu_607_p1));
    weight_V_address0 <= tmp_19_fu_638_p1(15 - 1 downto 0);

    weight_V_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            weight_V_ce0 <= ap_const_logic_1;
        else 
            weight_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x2_cast9_fu_691_p1 <= std_logic_vector(resize(unsigned(x2_reg_296),11));
    x2_cast_fu_695_p1 <= std_logic_vector(resize(unsigned(x2_reg_296),4));
    x_1_fu_484_p2 <= std_logic_vector(unsigned(x_reg_218) + unsigned(ap_const_lv3_1));
    x_2_fu_704_p2 <= std_logic_vector(unsigned(x2_reg_296) + unsigned(ap_const_lv3_1));
    x_cast1_fu_471_p1 <= std_logic_vector(resize(unsigned(x_reg_218),11));
    x_cast_fu_475_p1 <= std_logic_vector(resize(unsigned(x_reg_218),4));
    y3_cast_fu_710_p1 <= std_logic_vector(resize(unsigned(y3_reg_307),4));
    y_1_fu_508_p2 <= std_logic_vector(unsigned(y_reg_229) + unsigned(ap_const_lv3_1));
    y_2_fu_719_p2 <= std_logic_vector(unsigned(y3_reg_307) + unsigned(ap_const_lv3_1));
    y_cast1_fu_495_p1 <= std_logic_vector(resize(unsigned(y_reg_229),8));
    y_cast_fu_499_p1 <= std_logic_vector(resize(unsigned(y_reg_229),4));
end behav;
