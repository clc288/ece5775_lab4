// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_perform_conv.h"
#include "dut_uitofp_32ns_32_6.h"
#include "dut_w_conv1.h"
#include "dut_b_conv1.h"
#include "dut_w_conv2.h"
#include "dut_b_conv2.h"
#include "dut_mem_conv1.h"
#include "dut_output_V_assign.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_V_dout;
    sc_in< sc_logic > strm_in_V_V_empty_n;
    sc_out< sc_logic > strm_in_V_V_read;
    sc_out< sc_lv<32> > strm_out_V_V_din;
    sc_in< sc_logic > strm_out_V_V_full_n;
    sc_out< sc_logic > strm_out_V_V_write;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dut_w_conv1* w_conv1_U;
    dut_b_conv1* b_conv1_U;
    dut_w_conv2* w_conv2_U;
    dut_b_conv2* b_conv2_U;
    dut_mem_conv1* mem_conv1_U;
    dut_mem_conv1* mem_conv2_U;
    dut_output_V_assign* output_V_assign_U;
    dut_perform_conv* grp_dut_perform_conv_fu_168;
    dut_uitofp_32ns_32_6<1,6,32,32>* dut_uitofp_32ns_32_6_U11;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_31;
    sc_signal< sc_lv<32> > w_conv1_q0;
    sc_signal< sc_lv<32> > b_conv1_q0;
    sc_signal< sc_lv<32> > w_conv2_q0;
    sc_signal< sc_lv<32> > b_conv2_q0;
    sc_signal< sc_logic > strm_in_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_87;
    sc_signal< sc_logic > strm_out_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_96;
    sc_signal< sc_lv<32> > tmp_V_2_reg_275;
    sc_signal< bool > ap_sig_102;
    sc_signal< sc_lv<49> > p_Result_s_fu_196_p3;
    sc_signal< sc_lv<49> > p_Result_s_reg_280;
    sc_signal< sc_lv<6> > i_3_fu_213_p2;
    sc_signal< sc_lv<6> > i_3_reg_288;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_116;
    sc_signal< sc_lv<1> > exitcond1_i_fu_207_p2;
    sc_signal< sc_lv<32> > grp_fu_189_p1;
    sc_signal< sc_lv<32> > tmp_28_i_reg_298;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_131;
    sc_signal< sc_lv<10> > i_4_fu_242_p2;
    sc_signal< sc_lv<10> > i_4_reg_306;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_140;
    sc_signal< sc_lv<64> > tmp_30_i_fu_248_p1;
    sc_signal< sc_lv<64> > tmp_30_i_reg_311;
    sc_signal< sc_lv<1> > exitcond_i_fu_236_p2;
    sc_signal< sc_lv<10> > i_2_fu_264_p2;
    sc_signal< sc_lv<10> > i_2_reg_324;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_156;
    sc_signal< sc_lv<1> > exitcond_fu_258_p2;
    sc_signal< sc_lv<10> > mem_conv1_address0;
    sc_signal< sc_logic > mem_conv1_ce0;
    sc_signal< sc_logic > mem_conv1_we0;
    sc_signal< sc_lv<32> > mem_conv1_d0;
    sc_signal< sc_lv<32> > mem_conv1_q0;
    sc_signal< sc_lv<10> > mem_conv2_address0;
    sc_signal< sc_logic > mem_conv2_ce0;
    sc_signal< sc_lv<32> > mem_conv2_q0;
    sc_signal< sc_lv<10> > output_V_assign_address0;
    sc_signal< sc_logic > output_V_assign_ce0;
    sc_signal< sc_logic > output_V_assign_we0;
    sc_signal< sc_lv<32> > output_V_assign_d0;
    sc_signal< sc_lv<32> > output_V_assign_q0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_ap_start;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_ap_done;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_ap_idle;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_ap_ready;
    sc_signal< sc_lv<10> > grp_dut_perform_conv_fu_168_input_r_address0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_input_r_ce0;
    sc_signal< sc_lv<32> > grp_dut_perform_conv_fu_168_input_r_q0;
    sc_signal< sc_lv<10> > grp_dut_perform_conv_fu_168_output_r_address0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_output_r_ce0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_output_r_we0;
    sc_signal< sc_lv<32> > grp_dut_perform_conv_fu_168_output_r_d0;
    sc_signal< sc_lv<32> > grp_dut_perform_conv_fu_168_output_r_q0;
    sc_signal< sc_lv<15> > grp_dut_perform_conv_fu_168_weight_address0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_weight_ce0;
    sc_signal< sc_lv<32> > grp_dut_perform_conv_fu_168_weight_q0;
    sc_signal< sc_lv<6> > grp_dut_perform_conv_fu_168_bias_address0;
    sc_signal< sc_logic > grp_dut_perform_conv_fu_168_bias_ce0;
    sc_signal< sc_lv<32> > grp_dut_perform_conv_fu_168_bias_q0;
    sc_signal< sc_lv<8> > grp_dut_perform_conv_fu_168_M;
    sc_signal< sc_lv<8> > grp_dut_perform_conv_fu_168_N;
    sc_signal< sc_lv<4> > grp_dut_perform_conv_fu_168_O;
    sc_signal< sc_lv<6> > bvh_d_index_reg_134;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_223;
    sc_signal< sc_lv<10> > i1_i_reg_146;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_233;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_243;
    sc_signal< sc_lv<10> > i_reg_157;
    sc_signal< sc_logic > ap_reg_grp_dut_perform_conv_fu_168_ap_start;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_261;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_269;
    sc_signal< sc_lv<64> > tmp_29_i_fu_231_p1;
    sc_signal< sc_lv<64> > tmp_fu_270_p1;
    sc_signal< sc_lv<32> > grp_fu_189_p0;
    sc_signal< sc_lv<17> > tmp_17_fu_192_p1;
    sc_signal< sc_lv<32> > index_assign_cast3_fu_203_p1;
    sc_signal< sc_lv<1> > tmp_18_fu_219_p3;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_st1_fsm_0;
    static const sc_lv<16> ap_ST_st2_fsm_1;
    static const sc_lv<16> ap_ST_st3_fsm_2;
    static const sc_lv<16> ap_ST_st4_fsm_3;
    static const sc_lv<16> ap_ST_st5_fsm_4;
    static const sc_lv<16> ap_ST_st6_fsm_5;
    static const sc_lv<16> ap_ST_st7_fsm_6;
    static const sc_lv<16> ap_ST_st8_fsm_7;
    static const sc_lv<16> ap_ST_st9_fsm_8;
    static const sc_lv<16> ap_ST_st10_fsm_9;
    static const sc_lv<16> ap_ST_st11_fsm_10;
    static const sc_lv<16> ap_ST_st12_fsm_11;
    static const sc_lv<16> ap_ST_st13_fsm_12;
    static const sc_lv<16> ap_ST_st14_fsm_13;
    static const sc_lv<16> ap_ST_st15_fsm_14;
    static const sc_lv<16> ap_ST_st16_fsm_15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_40;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<10> ap_const_lv10_240;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_102();
    void thread_ap_sig_116();
    void thread_ap_sig_131();
    void thread_ap_sig_140();
    void thread_ap_sig_156();
    void thread_ap_sig_223();
    void thread_ap_sig_233();
    void thread_ap_sig_243();
    void thread_ap_sig_261();
    void thread_ap_sig_269();
    void thread_ap_sig_31();
    void thread_ap_sig_87();
    void thread_ap_sig_96();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_exitcond1_i_fu_207_p2();
    void thread_exitcond_fu_258_p2();
    void thread_exitcond_i_fu_236_p2();
    void thread_grp_dut_perform_conv_fu_168_M();
    void thread_grp_dut_perform_conv_fu_168_N();
    void thread_grp_dut_perform_conv_fu_168_O();
    void thread_grp_dut_perform_conv_fu_168_ap_start();
    void thread_grp_dut_perform_conv_fu_168_bias_q0();
    void thread_grp_dut_perform_conv_fu_168_input_r_q0();
    void thread_grp_dut_perform_conv_fu_168_output_r_q0();
    void thread_grp_dut_perform_conv_fu_168_weight_q0();
    void thread_grp_fu_189_p0();
    void thread_i_2_fu_264_p2();
    void thread_i_3_fu_213_p2();
    void thread_i_4_fu_242_p2();
    void thread_index_assign_cast3_fu_203_p1();
    void thread_mem_conv1_address0();
    void thread_mem_conv1_ce0();
    void thread_mem_conv1_d0();
    void thread_mem_conv1_we0();
    void thread_mem_conv2_address0();
    void thread_mem_conv2_ce0();
    void thread_output_V_assign_address0();
    void thread_output_V_assign_ce0();
    void thread_output_V_assign_d0();
    void thread_output_V_assign_we0();
    void thread_p_Result_s_fu_196_p3();
    void thread_strm_in_V_V_blk_n();
    void thread_strm_in_V_V_read();
    void thread_strm_out_V_V_blk_n();
    void thread_strm_out_V_V_din();
    void thread_strm_out_V_V_write();
    void thread_tmp_17_fu_192_p1();
    void thread_tmp_18_fu_219_p3();
    void thread_tmp_29_i_fu_231_p1();
    void thread_tmp_30_i_fu_248_p1();
    void thread_tmp_fu_270_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
